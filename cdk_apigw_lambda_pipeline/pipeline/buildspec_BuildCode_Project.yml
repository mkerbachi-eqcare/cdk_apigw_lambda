version: 0.2
phases:
  install:
    runtime-versions:
      ruby: 2.6
    commands:
      - echo installing cfn-nag
      - gem install cfn-nag
  build:
    commands:
      - pwd
      - ls
      - npm -v
      - env
      - npm install -g aws-cdk
      - python -m venv .venv && ls -ltr .venv/bin && . .venv/bin/activate && pip install -r requirements.txt
      - cdk synth --all
      - mkdir report
      - SCAN_RESULT=$(cfn_nag_scan --fail-on-warnings --input-path  cdk.out/ -o json > ./report/cfn_nag.out.json && echo OK || echo FAILED)
      - ls -ltr report
      - | 
        source_repository=${CODEBUILD_SRC_DIR##*/} jq  \
        "{ \"messageType\": \"CodeScanReport\", \"reportType\": \"CFN-NAG\", \
        \"createdAt\": env.date, \"source_repository\": env.source_repository, \
        \"source_branch\": env.CODEBUILD_SOURCE_VERSION, \
        \"build_id\": env.CODEBUILD_BUILD_ID, \
        \"source_commitid\": env.CODEBUILD_RESOLVED_SOURCE_VERSION, \
        \"report\": . }" ./report/cfn_nag.out.json > payload.json
      - aws s3 cp payload.json s3://cdk-codebuild-bucket/
      - aws s3 cp report/cfn_nag.out.json s3://cdk-codebuild-bucket/
      - aws lambda invoke --function-name ImportToSecurityHub --payload file://payload.json ./report/junit_scan_report.xml && echo "LAMBDA_SUCCEDED" || echo "LAMBDA_FAILED"
      - if [[ "$FAIL_BUILD" = "true" && "$SCAN_RESULT" = "FAILED" ]]; then printf "\n\nFailiing pipeline as possible insecure configurations were detected\n\n" && exit 1; fi
      - ls -ltr
      - ls -ltr report/
      - #cat payload.json
      - cdk diff CdkApigwLambdaStack
      - cdk deploy CdkApigwLambdaStack --require-approval never
